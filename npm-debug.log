0 info it worked if it ends with ok
1 verbose cli [ '/Users/wangzhili/git/nvm/versions/node/v4.2.1/bin/node',
1 verbose cli   '/Users/wangzhili/git/nvm/versions/node/v4.2.1/bin/npm',
1 verbose cli   'publish',
1 verbose cli   '--tag',
1 verbose cli   '@0.0.1' ]
2 info using npm@2.14.7
3 info using node@v4.2.1
4 verbose publish [ '.' ]
5 silly cache add args [ '.', null ]
6 verbose cache add spec .
7 silly cache add parsed spec Result {
7 silly cache add   raw: '.',
7 silly cache add   scope: null,
7 silly cache add   name: null,
7 silly cache add   rawSpec: '.',
7 silly cache add   spec: '/Users/wangzhili/myOpenSource/immutability',
7 silly cache add   type: 'directory' }
8 verbose addLocalDirectory /Users/wangzhili/.npm/immutability/0.0.1/package.tgz not in flight; packing
9 verbose tar pack [ '/Users/wangzhili/.npm/immutability/0.0.1/package.tgz',
9 verbose tar pack   '/Users/wangzhili/myOpenSource/immutability' ]
10 verbose tarball /Users/wangzhili/.npm/immutability/0.0.1/package.tgz
11 verbose folder /Users/wangzhili/myOpenSource/immutability
12 info prepublish immutability@0.0.1
13 verbose addLocalTarball adding from inside cache /Users/wangzhili/.npm/immutability/0.0.1/package.tgz
14 silly cache afterAdd immutability@0.0.1
15 verbose afterAdd /Users/wangzhili/.npm/immutability/0.0.1/package/package.json not in flight; writing
16 verbose afterAdd /Users/wangzhili/.npm/immutability/0.0.1/package/package.json written
17 silly publish { name: 'immutability',
17 silly publish   version: '0.0.1',
17 silly publish   description: '##安装',
17 silly publish   main: './src/immutability.js',
17 silly publish   scripts: { test: 'echo "Error: no test specified" && exit 1' },
17 silly publish   repository:
17 silly publish    { type: 'git',
17 silly publish      url: 'git+https://github.com/janryWang/immutability.git' },
17 silly publish   keywords: [ 'react', 'immutable.js', 'immutability' ],
17 silly publish   author: { name: 'Janry Wang' },
17 silly publish   license: 'MIT',
17 silly publish   bugs: { url: 'https://github.com/janryWang/immutability/issues' },
17 silly publish   homepage: 'https://github.com/janryWang/immutability#readme',
17 silly publish   dependencies: { immutable: '^3.7.5', react: '^0.14.2' },
17 silly publish   readme: '#Immutability\n\n##安装\n\n===\n\n    npm install --save immutability\n    \n##介绍\n===\n\nReact是一款非常棒的JS框架，它使得组件开发效率变得更高，同时借助它的虚拟dom的diff算法可以使得页面重绘次数大大减少，渲染性能大大提高。但是对于render而言，它的调用次数在默认情况下是不太可控的，因为render在调用之前会对state进行一次浅比较，如果oldState不等于nextState，就会调用render方法，很明显，如果state是一个庞大的树，或者存在一个大型数组结构，这样的比较方式是不够好的，无用的render次数太多，所以，我们必须进行深度比较，从而降低render次数，提高整体性能，但是对于深层比较，普通的深度遍历，其实还是有性能问题的，所以facebook创造了Immutable.js，它是利用了函数式中的持久化数据结构的优点，将对象与对象间的比较变得更加高效。所以利用Immutable.js完全可以大大提升react组件的性能。\n\n但问题来了，怎样使用才是最佳的使用方式，我个人觉得，就要和原生的使用方式差不多，它不会让人觉得很唐突，所以Immutability出现了！\n\nImmutability的出现只为增强react组件性能，同时降低开发者的学习成本。\n\n它有几个优点：\n\n1. 使用方便，利用es6的decorate\n\n\t    import {IBDecorate} from \'immutability\';\n\t    import {Component} from \'react\';\n\t    \n\t    @IbDecorate() class Tmall extends Component{\n\t    \n\t    \tstate={\n\t    \t\tsay:"Hello world",\n\t    \t\trock:false\n\t    \t}\n\t    \t\n\t    \tcomponnentDidMount(){\n\t    \t\tlet self = this;\n\t    \t\tlet {rock} = this.getState();\n\t    \t\tsetInterVal(()=>{\n\t    \t\t   if(self.unmount) return;\n\t    \t\t\tself.setState({\n\t    \t\t\t\tsay:rock ? \'Rock the world\' : \'Hello world\'\n\t    \t\t\t});\n\t    \t\t},1000);\n\t    \t}\n\t    \t\n\t    \tcomponentWillUnmount(){\n\t    \t\tthis.unmount = true;\n\t    \t}\n\t    \n\t    \trender(){\n\t    \t\treturn (\n\t    \t\t\t<div>this.getState(\'say\')</div>\n\t    \t\t);\n\t    \t\n\t    \t}\n\t    \n\t    }\n\t    \n\t    \n2. 学习成本非常低，只需要知道怎么使用`this.getState()`这个API就行，记住，获取状态，不要再和过去一样`this.state.say`这样来获取哦，当然如果你想访问深层对象，`this.getState(\'a.b.c.d[5]\')`这样就OK了。\n\n3. Immutable的API接口已集成到每个组件中，方便开发者使用,比如\n\n\t    this.toJS(),this.fromJS().....\n   具体API文档请移步[ImmutableJS文档](https://facebook.github.io/immutable-js/docs)',
17 silly publish   readmeFilename: 'README.md',
17 silly publish   gitHead: 'c153fd6fa6951f4535e4f122277a736f15d4ce37',
17 silly publish   _id: 'immutability@0.0.1',
17 silly publish   _shasum: '5ad66129bba31bb32669e25d3d9fe92368745cdd',
17 silly publish   _from: '.' }
18 verbose getPublishConfig undefined
19 silly mapToRegistry name immutability
20 silly mapToRegistry using default registry
21 silly mapToRegistry registry https://registry.npmjs.org/
22 silly mapToRegistry uri https://registry.npmjs.org/immutability
23 verbose publish registryBase https://registry.npmjs.org/
24 silly publish uploading /Users/wangzhili/.npm/immutability/0.0.1/package.tgz
25 verbose request uri https://registry.npmjs.org/immutability
26 verbose request sending authorization for write operation
27 info attempt registry request try #1 at 3:53:39 PM
28 verbose request using bearer token for auth
29 verbose request id eed21ac8649b3090
30 http request PUT https://registry.npmjs.org/immutability
31 http 403 https://registry.npmjs.org/immutability
32 verbose headers { 'content-type': 'application/json',
32 verbose headers   'cache-control': 'max-age=60',
32 verbose headers   'content-length': '95',
32 verbose headers   'accept-ranges': 'bytes',
32 verbose headers   date: 'Wed, 11 Nov 2015 07:53:40 GMT',
32 verbose headers   via: '1.1 varnish',
32 verbose headers   connection: 'keep-alive',
32 verbose headers   'x-served-by': 'cache-nrt6124-NRT',
32 verbose headers   'x-cache': 'MISS',
32 verbose headers   'x-cache-hits': '0',
32 verbose headers   'x-timer': 'S1447228419.943524,VS0,VE508' }
33 verbose request invalidating /Users/wangzhili/.npm/registry.npmjs.org/immutability on PUT
34 error publish Failed PUT 403
35 verbose stack Error: "You cannot publish over the previously published version 0.0.1." : immutability
35 verbose stack     at makeError (/Users/wangzhili/git/nvm/versions/node/v4.2.1/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:264:12)
35 verbose stack     at CachingRegistryClient.<anonymous> (/Users/wangzhili/git/nvm/versions/node/v4.2.1/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:252:14)
35 verbose stack     at Request._callback (/Users/wangzhili/git/nvm/versions/node/v4.2.1/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:172:14)
35 verbose stack     at Request.self.callback (/Users/wangzhili/git/nvm/versions/node/v4.2.1/lib/node_modules/npm/node_modules/request/request.js:198:22)
35 verbose stack     at emitTwo (events.js:87:13)
35 verbose stack     at Request.emit (events.js:172:7)
35 verbose stack     at Request.<anonymous> (/Users/wangzhili/git/nvm/versions/node/v4.2.1/lib/node_modules/npm/node_modules/request/request.js:1063:14)
35 verbose stack     at emitOne (events.js:82:20)
35 verbose stack     at Request.emit (events.js:169:7)
35 verbose stack     at IncomingMessage.<anonymous> (/Users/wangzhili/git/nvm/versions/node/v4.2.1/lib/node_modules/npm/node_modules/request/request.js:1009:12)
36 verbose statusCode 403
37 verbose pkgid immutability
38 verbose cwd /Users/wangzhili/myOpenSource/immutability
39 error Darwin 15.0.0
40 error argv "/Users/wangzhili/git/nvm/versions/node/v4.2.1/bin/node" "/Users/wangzhili/git/nvm/versions/node/v4.2.1/bin/npm" "publish" "--tag" "@0.0.1"
41 error node v4.2.1
42 error npm  v2.14.7
43 error code E403
44 error "You cannot publish over the previously published version 0.0.1." : immutability
45 error If you need help, you may report this error at:
45 error     <https://github.com/npm/npm/issues>
46 verbose exit [ 1, true ]
